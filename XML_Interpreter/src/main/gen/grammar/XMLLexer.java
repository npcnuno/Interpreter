// Generated from /home/katchow/Interpreter/XML_Interpreter/src/main/kotlin/grammar/XMLLexer.g4 by ANTLR 4.13.2
package grammar;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class XMLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, CDATA=2, EntityRef=3, CharRef=4, SEA_WS=5, OPEN=6, XMLDeclOpen=7, 
		PI=8, TEXT=9, SLASH=10, EQUALS=11, STRING=12, Name=13, S=14, CLOSE=15, 
		SLASH_CLOSE=16, SPECIAL_CLOSE=17;
	public static final int
		INSIDE=1;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "INSIDE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMENT", "CDATA", "EntityRef", "CharRef", "SEA_WS", "OPEN", "XMLDeclOpen", 
			"PI", "TEXT", "SLASH", "EQUALS", "STRING", "Name", "S", "CLOSE", "SLASH_CLOSE", 
			"SPECIAL_CLOSE", "NameChar", "NameStartChar"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, "'<'", null, null, null, "'/'", "'='", 
			null, null, null, "'>'", "'/>'", "'?>'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMENT", "CDATA", "EntityRef", "CharRef", "SEA_WS", "OPEN", "XMLDeclOpen", 
			"PI", "TEXT", "SLASH", "EQUALS", "STRING", "Name", "S", "CLOSE", "SLASH_CLOSE", 
			"SPECIAL_CLOSE"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public XMLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "XMLLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0011\u00c5\u0006\uffff\uffff\u0006\uffff\uffff\u0002\u0000"+
		"\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003"+
		"\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006"+
		"\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002"+
		"\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002"+
		"\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002"+
		"\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0005\u0000/\b\u0000\n\u0000"+
		"\f\u00002\t\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0005\u0001C\b"+
		"\u0001\n\u0001\f\u0001F\t\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0004\u0003T\b\u0003\u000b\u0003\f\u0003"+
		"U\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0004\u0003^\b\u0003\u000b\u0003\f\u0003_\u0001\u0003\u0003\u0003c\b"+
		"\u0003\u0001\u0004\u0001\u0004\u0003\u0004g\b\u0004\u0001\u0004\u0004"+
		"\u0004j\b\u0004\u000b\u0004\f\u0004k\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0005\u0007\u0081\b\u0007"+
		"\n\u0007\f\u0007\u0084\t\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\b\u0004\b\u008a\b\b\u000b\b\f\b\u008b\u0001\t\u0001\t\u0001\n\u0001\n"+
		"\u0001\u000b\u0001\u000b\u0005\u000b\u0094\b\u000b\n\u000b\f\u000b\u0097"+
		"\t\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0005\u000b\u009c\b\u000b"+
		"\n\u000b\f\u000b\u009f\t\u000b\u0001\u000b\u0003\u000b\u00a2\b\u000b\u0001"+
		"\f\u0001\f\u0005\f\u00a6\b\f\n\f\f\f\u00a9\t\f\u0001\r\u0004\r\u00ac\b"+
		"\r\u000b\r\f\r\u00ad\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0003\u0011\u00c2\b\u0011\u0001\u0012\u0001\u0012\u00050"+
		"D\u0082\u0095\u009d\u0000\u0013\u0002\u0001\u0004\u0002\u0006\u0003\b"+
		"\u0004\n\u0005\f\u0006\u000e\u0007\u0010\b\u0012\t\u0014\n\u0016\u000b"+
		"\u0018\f\u001a\r\u001c\u000e\u001e\u000f \u0010\"\u0011$\u0000&\u0000"+
		"\u0002\u0000\u0001\u0007\u0001\u000009\u0003\u000009AFaf\u0002\u0000\t"+
		"\t  \u0002\u0000&&<<\u0003\u0000\t\n\r\r  \u0003\u0000-.09__\u0004\u0000"+
		"09AZ__az\u00d1\u0000\u0002\u0001\u0000\u0000\u0000\u0000\u0004\u0001\u0000"+
		"\u0000\u0000\u0000\u0006\u0001\u0000\u0000\u0000\u0000\b\u0001\u0000\u0000"+
		"\u0000\u0000\n\u0001\u0000\u0000\u0000\u0000\f\u0001\u0000\u0000\u0000"+
		"\u0000\u000e\u0001\u0000\u0000\u0000\u0000\u0010\u0001\u0000\u0000\u0000"+
		"\u0000\u0012\u0001\u0000\u0000\u0000\u0001\u0014\u0001\u0000\u0000\u0000"+
		"\u0001\u0016\u0001\u0000\u0000\u0000\u0001\u0018\u0001\u0000\u0000\u0000"+
		"\u0001\u001a\u0001\u0000\u0000\u0000\u0001\u001c\u0001\u0000\u0000\u0000"+
		"\u0001\u001e\u0001\u0000\u0000\u0000\u0001 \u0001\u0000\u0000\u0000\u0001"+
		"\"\u0001\u0000\u0000\u0000\u0002(\u0001\u0000\u0000\u0000\u00047\u0001"+
		"\u0000\u0000\u0000\u0006K\u0001\u0000\u0000\u0000\bb\u0001\u0000\u0000"+
		"\u0000\ni\u0001\u0000\u0000\u0000\fm\u0001\u0000\u0000\u0000\u000eq\u0001"+
		"\u0000\u0000\u0000\u0010{\u0001\u0000\u0000\u0000\u0012\u0089\u0001\u0000"+
		"\u0000\u0000\u0014\u008d\u0001\u0000\u0000\u0000\u0016\u008f\u0001\u0000"+
		"\u0000\u0000\u0018\u00a1\u0001\u0000\u0000\u0000\u001a\u00a3\u0001\u0000"+
		"\u0000\u0000\u001c\u00ab\u0001\u0000\u0000\u0000\u001e\u00b1\u0001\u0000"+
		"\u0000\u0000 \u00b5\u0001\u0000\u0000\u0000\"\u00ba\u0001\u0000\u0000"+
		"\u0000$\u00c1\u0001\u0000\u0000\u0000&\u00c3\u0001\u0000\u0000\u0000("+
		")\u0005<\u0000\u0000)*\u0005!\u0000\u0000*+\u0005-\u0000\u0000+,\u0005"+
		"-\u0000\u0000,0\u0001\u0000\u0000\u0000-/\t\u0000\u0000\u0000.-\u0001"+
		"\u0000\u0000\u0000/2\u0001\u0000\u0000\u000001\u0001\u0000\u0000\u0000"+
		"0.\u0001\u0000\u0000\u000013\u0001\u0000\u0000\u000020\u0001\u0000\u0000"+
		"\u000034\u0005-\u0000\u000045\u0005-\u0000\u000056\u0005>\u0000\u0000"+
		"6\u0003\u0001\u0000\u0000\u000078\u0005<\u0000\u000089\u0005!\u0000\u0000"+
		"9:\u0005[\u0000\u0000:;\u0005C\u0000\u0000;<\u0005D\u0000\u0000<=\u0005"+
		"A\u0000\u0000=>\u0005T\u0000\u0000>?\u0005A\u0000\u0000?@\u0005[\u0000"+
		"\u0000@D\u0001\u0000\u0000\u0000AC\t\u0000\u0000\u0000BA\u0001\u0000\u0000"+
		"\u0000CF\u0001\u0000\u0000\u0000DE\u0001\u0000\u0000\u0000DB\u0001\u0000"+
		"\u0000\u0000EG\u0001\u0000\u0000\u0000FD\u0001\u0000\u0000\u0000GH\u0005"+
		"]\u0000\u0000HI\u0005]\u0000\u0000IJ\u0005>\u0000\u0000J\u0005\u0001\u0000"+
		"\u0000\u0000KL\u0005&\u0000\u0000LM\u0003\u001a\f\u0000MN\u0005;\u0000"+
		"\u0000N\u0007\u0001\u0000\u0000\u0000OP\u0005&\u0000\u0000PQ\u0005#\u0000"+
		"\u0000QS\u0001\u0000\u0000\u0000RT\u0007\u0000\u0000\u0000SR\u0001\u0000"+
		"\u0000\u0000TU\u0001\u0000\u0000\u0000US\u0001\u0000\u0000\u0000UV\u0001"+
		"\u0000\u0000\u0000VW\u0001\u0000\u0000\u0000Wc\u0005;\u0000\u0000XY\u0005"+
		"&\u0000\u0000YZ\u0005#\u0000\u0000Z[\u0005x\u0000\u0000[]\u0001\u0000"+
		"\u0000\u0000\\^\u0007\u0001\u0000\u0000]\\\u0001\u0000\u0000\u0000^_\u0001"+
		"\u0000\u0000\u0000_]\u0001\u0000\u0000\u0000_`\u0001\u0000\u0000\u0000"+
		"`a\u0001\u0000\u0000\u0000ac\u0005;\u0000\u0000bO\u0001\u0000\u0000\u0000"+
		"bX\u0001\u0000\u0000\u0000c\t\u0001\u0000\u0000\u0000dj\u0007\u0002\u0000"+
		"\u0000eg\u0005\r\u0000\u0000fe\u0001\u0000\u0000\u0000fg\u0001\u0000\u0000"+
		"\u0000gh\u0001\u0000\u0000\u0000hj\u0005\n\u0000\u0000id\u0001\u0000\u0000"+
		"\u0000if\u0001\u0000\u0000\u0000jk\u0001\u0000\u0000\u0000ki\u0001\u0000"+
		"\u0000\u0000kl\u0001\u0000\u0000\u0000l\u000b\u0001\u0000\u0000\u0000"+
		"mn\u0005<\u0000\u0000no\u0001\u0000\u0000\u0000op\u0006\u0005\u0000\u0000"+
		"p\r\u0001\u0000\u0000\u0000qr\u0005<\u0000\u0000rs\u0005?\u0000\u0000"+
		"st\u0005x\u0000\u0000tu\u0005m\u0000\u0000uv\u0005l\u0000\u0000vw\u0001"+
		"\u0000\u0000\u0000wx\u0003\u001c\r\u0000xy\u0001\u0000\u0000\u0000yz\u0006"+
		"\u0006\u0000\u0000z\u000f\u0001\u0000\u0000\u0000{|\u0005<\u0000\u0000"+
		"|}\u0005?\u0000\u0000}~\u0001\u0000\u0000\u0000~\u0082\u0003\u001a\f\u0000"+
		"\u007f\u0081\t\u0000\u0000\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0081"+
		"\u0084\u0001\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0082"+
		"\u0080\u0001\u0000\u0000\u0000\u0083\u0085\u0001\u0000\u0000\u0000\u0084"+
		"\u0082\u0001\u0000\u0000\u0000\u0085\u0086\u0005?\u0000\u0000\u0086\u0087"+
		"\u0005>\u0000\u0000\u0087\u0011\u0001\u0000\u0000\u0000\u0088\u008a\b"+
		"\u0003\u0000\u0000\u0089\u0088\u0001\u0000\u0000\u0000\u008a\u008b\u0001"+
		"\u0000\u0000\u0000\u008b\u0089\u0001\u0000\u0000\u0000\u008b\u008c\u0001"+
		"\u0000\u0000\u0000\u008c\u0013\u0001\u0000\u0000\u0000\u008d\u008e\u0005"+
		"/\u0000\u0000\u008e\u0015\u0001\u0000\u0000\u0000\u008f\u0090\u0005=\u0000"+
		"\u0000\u0090\u0017\u0001\u0000\u0000\u0000\u0091\u0095\u0005\"\u0000\u0000"+
		"\u0092\u0094\t\u0000\u0000\u0000\u0093\u0092\u0001\u0000\u0000\u0000\u0094"+
		"\u0097\u0001\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0095"+
		"\u0093\u0001\u0000\u0000\u0000\u0096\u0098\u0001\u0000\u0000\u0000\u0097"+
		"\u0095\u0001\u0000\u0000\u0000\u0098\u00a2\u0005\"\u0000\u0000\u0099\u009d"+
		"\u0005\'\u0000\u0000\u009a\u009c\t\u0000\u0000\u0000\u009b\u009a\u0001"+
		"\u0000\u0000\u0000\u009c\u009f\u0001\u0000\u0000\u0000\u009d\u009e\u0001"+
		"\u0000\u0000\u0000\u009d\u009b\u0001\u0000\u0000\u0000\u009e\u00a0\u0001"+
		"\u0000\u0000\u0000\u009f\u009d\u0001\u0000\u0000\u0000\u00a0\u00a2\u0005"+
		"\'\u0000\u0000\u00a1\u0091\u0001\u0000\u0000\u0000\u00a1\u0099\u0001\u0000"+
		"\u0000\u0000\u00a2\u0019\u0001\u0000\u0000\u0000\u00a3\u00a7\u0003&\u0012"+
		"\u0000\u00a4\u00a6\u0003$\u0011\u0000\u00a5\u00a4\u0001\u0000\u0000\u0000"+
		"\u00a6\u00a9\u0001\u0000\u0000\u0000\u00a7\u00a5\u0001\u0000\u0000\u0000"+
		"\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u001b\u0001\u0000\u0000\u0000"+
		"\u00a9\u00a7\u0001\u0000\u0000\u0000\u00aa\u00ac\u0007\u0004\u0000\u0000"+
		"\u00ab\u00aa\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000"+
		"\u00ad\u00ab\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000\u0000"+
		"\u00ae\u00af\u0001\u0000\u0000\u0000\u00af\u00b0\u0006\r\u0001\u0000\u00b0"+
		"\u001d\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005>\u0000\u0000\u00b2\u00b3"+
		"\u0001\u0000\u0000\u0000\u00b3\u00b4\u0006\u000e\u0002\u0000\u00b4\u001f"+
		"\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005/\u0000\u0000\u00b6\u00b7\u0005"+
		">\u0000\u0000\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8\u00b9\u0006\u000f"+
		"\u0002\u0000\u00b9!\u0001\u0000\u0000\u0000\u00ba\u00bb\u0005?\u0000\u0000"+
		"\u00bb\u00bc\u0005>\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd"+
		"\u00be\u0006\u0010\u0002\u0000\u00be#\u0001\u0000\u0000\u0000\u00bf\u00c2"+
		"\u0003&\u0012\u0000\u00c0\u00c2\u0007\u0005\u0000\u0000\u00c1\u00bf\u0001"+
		"\u0000\u0000\u0000\u00c1\u00c0\u0001\u0000\u0000\u0000\u00c2%\u0001\u0000"+
		"\u0000\u0000\u00c3\u00c4\u0007\u0006\u0000\u0000\u00c4\'\u0001\u0000\u0000"+
		"\u0000\u0012\u0000\u00010DU_bfik\u0082\u008b\u0095\u009d\u00a1\u00a7\u00ad"+
		"\u00c1\u0003\u0005\u0001\u0000\u0006\u0000\u0000\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}